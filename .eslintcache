[{"/home/evan/code/plu/src/reportWebVitals.js":"1","/home/evan/code/plu/src/App.js":"2","/home/evan/code/plu/src/index.js":"3","/home/evan/code/plu/src/Images.jsx":"4","/home/evan/code/plu/src/App.test.js":"5"},{"size":362,"mtime":1610327286961,"results":"6","hashOfConfig":"7"},{"size":1328,"mtime":1610397854175,"results":"8","hashOfConfig":"7"},{"size":564,"mtime":1610396789116,"results":"9","hashOfConfig":"7"},{"size":188,"mtime":1610329635548,"results":"10","hashOfConfig":"7"},{"size":246,"mtime":1610327286961,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16k4vwx",{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/evan/code/plu/src/reportWebVitals.js",[],"/home/evan/code/plu/src/App.js",["24"],"import React, { useState } from 'react';\n\nimport './App.css';\n\nimport Images from './Images';\n\nimport Data from './data.json';\n\nfunction App() {\n  const [item, setItem] = useState(\n    Data[Math.floor(Math.random() * Data.length)]\n  );\n\n  const [correct, setCorrect] = useState(0);\n\n  const success = [];\n\n  const notMastered = Data;\n\n  const [input, setInput] = useState('');\n\n  const [showName, setShowName] = useState(false);\n\n  const nextItem = () => {\n    setShowName(false);\n    setItem(notMastered[Math.floor(Math.random() * notMastered.length)]);\n  };\n\n  function handleChange(e) {\n    setInput(e.target.value);\n  }\n\n  const checkPLU = (e) => {\n    e.preventDefault();\n    setInput('');\n    if (input === item.plu) {\n      setCorrect(correct + 1);\n      console.log(correct);\n      if (correct >= 3) {\n        nextItem();\n      }\n    } else {\n      setCorrect(0);\n      console.log(correct);\n      setShowName(true);\n    }\n  };\n\n  return (\n    <div className='App'>\n      <header className='App-header'>\n        <h1>Publix PLU Practice</h1>\n        <form onSubmit={checkPLU}>\n          <input type='text' onChange={handleChange} value={input} />\n        </form>\n\n        <p>{showName ? item.name + ' - ' + item.plu : ''}</p>\n        <Images imageName={item.plu} />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","/home/evan/code/plu/src/index.js",[],"/home/evan/code/plu/src/Images.jsx",["25"],"import React from 'react';\n\nconst Images = (props) => (\n  <img\n    style={{ height: '500px' }}\n    src={require(`./images/${props.imageName}.jpg`).default}\n  />\n);\n\nexport default Images;\n","/home/evan/code/plu/src/App.test.js",[],{"ruleId":"26","severity":1,"message":"27","line":16,"column":9,"nodeType":"28","messageId":"29","endLine":16,"endColumn":16},{"ruleId":"30","severity":1,"message":"31","line":4,"column":3,"nodeType":"32","endLine":7,"endColumn":5},"no-unused-vars","'success' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]